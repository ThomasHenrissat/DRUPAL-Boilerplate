{"version":3,"sources":["main.css","utils/_debug.scss","base/_reset.scss","objects/_media.scss","components/_hello.scss","utils/_media-queries.scss"],"names":[],"mappings":"AAwCA,2BCtCI,wBAA4B,CD0ChC,2BCrCI,uBAAwB,CCN5B,2ZAaI,SAAU,CACV,QAAS,CACT,YAAa,CACb,cAAe,CACf,uBAAwB,CACxB,QAAS,CAGb,8EAEI,aAAc,CAElB,KACI,aAAc,CAElB,MACI,eAAgB,CAEpB,aACI,WAAY,CAEhB,oDAEI,UAAW,CACX,YAAa,CAEjB,MACI,gBAAiB,CACjB,wBAAyB,CAE7B,EACI,qBAAsB,CC5CtB,gBACI,aAAc,CACd,WAAY,CCHpB,SACI,aAAoB,CAEpB,gBACI,aAAc,CACd,WAAY,CC8BZ,oCAQJ,OACI,qBAAsB,CACzB,CAVG,oCAaJ,OACI,qBAAsB,CACzB,CAfG,qCAkBJ,OACI,qBAAsB,CACzB,CApBG,qCAuBJ,OACI,qBAAsB,CACzB,CAzBG,qCA4BJ,OACI,qBAAsB,CACzB,CA9BG,qCAiCJ,OACI,qBAAsB,CACzB","file":"main.css","sourcesContent":["@media screen and (min-width: 480px) {\n  .dummy {\n    box-sizing: border-box; } }\n\n@media screen and (min-width: 760px) {\n  .dummy {\n    box-sizing: border-box; } }\n\n@media screen and (min-width: 1000px) {\n  .dummy {\n    box-sizing: border-box; } }\n\n@media screen and (min-width: 1300px) {\n  .dummy {\n    box-sizing: border-box; } }\n\n@media screen and (min-width: 1700px) {\n  .dummy {\n    box-sizing: border-box; } }\n\n@media screen and (min-width: 1800px) {\n  .dummy {\n    box-sizing: border-box; } }\n\n/*\ncontainer {\n    // WARNING: The mixin needs to be referenced INSIDE at least one container selector\n    @include media-min(M) {\n        test {\n            background: transparent;\n        }\n    }\n\n    @include media-min(1500px) {\n        test {\n            background: red;\n        }\n    }\n}\n*/\n[class^=\"c-\"],\n[class*=\" c-\"] {\n  border: 3px solid lightgreen; }\n\n[class^=\"o-\"],\n[class*=\" o-\"] {\n  border: 3px solid orange; }\n\n/* stylelint-disable */\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  padding: 0;\n  margin: 0;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline;\n  border: 0; }\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block; }\n\nbody {\n  line-height: 1; }\n\nol, ul {\n  list-style: none; }\n\nblockquote, q {\n  quotes: none; }\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: \"\";\n  content: none; }\n\ntable {\n  border-spacing: 0;\n  border-collapse: collapse; }\n\n* {\n  box-sizing: border-box; }\n\n.o-media__image {\n  display: block;\n  width: 200px; }\n\n.c-hello {\n  margin: 10px 0; }\n  .c-hello__image {\n    display: block;\n    width: 200px; }\n","[class^=\"c-\"],\n[class*=\" c-\"] {\n    border: 3px solid lightgreen;\n}\n\n[class^=\"o-\"],\n[class*=\" o-\"] {\n    border: 3px solid orange;\n}","/* stylelint-disable */\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n    padding: 0;\n    margin: 0;\n    font: inherit;\n    font-size: 100%;\n    vertical-align: baseline;\n    border: 0;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol, ul {\n    list-style: none;\n}\nblockquote, q {\n    quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n    content: \"\";\n    content: none;\n}\ntable {\n    border-spacing: 0;\n    border-collapse: collapse;\n}\n* {\n    box-sizing: border-box;\n}",".o-media {\n    &__image {\n        display: block;\n        width: 200px;\n    }\n}",".c-hello {\n    margin: $margin-10 0;\n\n    &__image {\n        display: block;\n        width: 200px;\n    }\n}","// Breakpoints\n$screen-m-breakpoint-min: 480px;\n$screen-l-breakpoint-min: 760px;\n$screen-xl-breakpoint-min: 1000px;\n$screen-xxl-breakpoint-min: 1300px;\n$screen-xxxl-breakpoint-min: 1700px;\n$screen-xxxxl-breakpoint-min: 1800px;\n\n// Rules\n$screen-m-rule-min: \"min-width: \" + $screen-m-breakpoint-min;\n$screen-l-rule-min: \"min-width: \" + $screen-l-breakpoint-min;\n$screen-xl-rule-min: \"min-width: \" + $screen-xl-breakpoint-min;\n$screen-xxl-rule-min: \"min-width: \" + $screen-xxl-breakpoint-min;\n$screen-xxxl-rule-min: \"min-width: \" + $screen-xxxl-breakpoint-min;\n$screen-xxxxl-rule-min: \"min-width: \" + $screen-xxxxl-breakpoint-min;\n\n// Mixins\n@mixin media-min($breakpoint) {\n    $rule: \"min-width: \" + $breakpoint;\n\n    @if $breakpoint == M {\n        $rule: $screen-m-rule-min;\n    } @else if $breakpoint == L {\n        $rule: $screen-l-rule-min;\n    } @else if $breakpoint == XL {\n        $rule: $screen-xl-rule-min;\n    } @else if $breakpoint == XXL {\n        $rule: $screen-xxl-rule-min;\n    } @else if $breakpoint == XXXL {\n        $rule: $screen-xxxl-rule-min;\n    } @else if $breakpoint == XXXXL {\n        $rule: $screen-xxxxl-rule-min;\n    }\n\n    @if ($rule) {\n        @media screen and ($rule) {\n            @content;\n        }\n    }\n}\n\n// This is a hack to make sure that media queries are ordered correctly\n@include media-min(M) {\n    .dummy {\n        box-sizing: border-box;\n    }\n}\n@include media-min(L) {\n    .dummy {\n        box-sizing: border-box;\n    }\n}\n@include media-min(XL) {\n    .dummy {\n        box-sizing: border-box;\n    }\n}\n@include media-min(XXL) {\n    .dummy {\n        box-sizing: border-box;\n    }\n}\n@include media-min(XXXL) {\n    .dummy {\n        box-sizing: border-box;\n    }\n}\n@include media-min(XXXXL) {\n    .dummy {\n        box-sizing: border-box;\n    }\n}\n\n/*\ncontainer {\n    // WARNING: The mixin needs to be referenced INSIDE at least one container selector\n    @include media-min(M) {\n        test {\n            background: transparent;\n        }\n    }\n\n    @include media-min(1500px) {\n        test {\n            background: red;\n        }\n    }\n}\n*/"]}